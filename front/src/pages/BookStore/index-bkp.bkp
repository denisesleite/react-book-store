import React, {useState, useEffect} from 'react';
import api from '../../services/api';
import './styles.css';
import '../../assets/css/app.css';
import { FiPlus, FiX, FiSearch } from 'react-icons/fi';
import { Form } from '@unform/web';
import { useHistory } from 'react-router-dom';

// import {Modal} from '../../Component/Modal';

import FormularioPesquisa from '../../Component/FormularioPesquisa';

interface Livros{ 
    id: number,
    nome: string,
    autor: string,
    ano: number,
    genero: string,
    editora: string,
    paginas: number,
    status: string
}

const Livraria = () => {
    const history = useHistory();
    
    const [dadosLivro, setDadosLivro] = useState<Livros[]>();
    const [selectedLivro, setSelectedLivro] = useState<Livros[]>();

    const [modalConsulta, setModalConsulta] = useState(false);
    const [modalAdicionaLivro, setModalAdicionaLivro] = useState(false);    
    const [formData, setFormData] = useState({
        nome: '',
        autor: '',
        ano: '',
        genero: '',
        editora: '',
        paginas: '',
        status: '',
    });

    const [desabilitaBotao, setDesabilitaBotao] = useState(true);    

    useEffect(() => {
        api.get('/livros').then(response => {
            setDadosLivro(response.data);
        });
    }, [])

    function handleInfoLivro(info: Livros){
        const livroSelecionado = [{
            id: info.id,
            nome: info.nome,
            autor: info.autor,
            ano: info.ano,
            genero: info.genero,
            editora: info.editora,
            paginas: info.paginas,
            status: info.status
        }]

        setSelectedLivro(livroSelecionado);
        setModalConsulta(true);
        console.log(livroSelecionado)
    }

    function handleRemoveLivro(excluiLivro: Livros){
        if(excluiLivro.status !== "Disponível"){
            alert('Não é possível deletar um livro alugado');
        }else{
            api.delete(`livros/${excluiLivro.id}`);
            alert('Livro excluído com sucesso!');
            window.location.reload(true);
        }
    }

    function handleSalvarEdicao(alteracao: Livros){
        
    }

    function fechaModal() {
        setModalConsulta(false);
        window.location.reload(true);
    }
    
    return (
        <>
            <header>
                <h1>LOGO</h1>
            </header>
            <main>
                <div className="pesquisa">
                    <FormularioPesquisa />
                    <div>
                        <button onClick={() => setModalAdicionaLivro(true)}>Adicionar Livro</button>
                    </div>
                </div>
                <div className="lista">
                    {dadosLivro?.map(livro => (
                        <div className="box-livro" key={livro.id} onClick={() => handleInfoLivro(livro)}>
                            <div>
                                <p><b>Nome do livro:</b> {livro.nome.length > 18 ? livro.nome.substr(0, 18) + '...' : livro.nome}</p>
                                <p><b>Autor do livro:</b> {livro.autor}</p>
                        </div>

                            <div className="detalhes">
                                <p>Clique para mais detalhes <FiPlus/></p>
                            </div>
                        </div>  
                    ))}
                </div>
            </main>

            <div className={modalConsulta ? 'modal active' : 'modal'}>
                {selectedLivro?.map(livroInfo => (
                    <div className="content">
                        <FiX onClick={fechaModal}/>
                        <p id="id-livro">ID do livro: {livroInfo.id}</p>

                        <div>
                            <div className="info">
                                <form onSubmit={() => handleSalvarEdicao(livroInfo)}>
                                    <div className="dados-livro">
                                        <div className="input-form">
                                            <label htmlFor="">Nome do Livro</label>
                                            <input type="text" name="nome" value={livroInfo.nome} required 
                                            disabled={desabilitaBotao} 
                                            />
                                        </div>
                                        <div className="input-form">
                                            <label htmlFor="">Autor do livro</label>
                                            <input type="text" name="nome" value={livroInfo.autor} required 
                                            disabled={desabilitaBotao} />
                                        </div>
                                        <div className="input-form">
                                            <label htmlFor="">Ano do livro</label>
                                            <input type="text" name="nome" value={livroInfo.ano} required 
                                            disabled={desabilitaBotao} />
                                        </div>
                                        <div className="input-form">
                                            <label htmlFor="">Gênero do livro</label>
                                            <input type="text" name="nome" value={livroInfo.genero} required 
                                            disabled={desabilitaBotao} />
                                        </div>
                                        <div className="input-form">
                                            <label htmlFor="">Editora do livro</label>
                                            <input type="text" name="nome" value={livroInfo.editora} required 
                                            disabled={desabilitaBotao} />
                                        </div>
                                        <div className="input-form">
                                            <label htmlFor="">Nº de páginas do livro</label>
                                            <input type="text" name="nome" value={livroInfo.paginas} required 
                                            disabled={desabilitaBotao} />
                                        </div>
                                        <div className="input-form">
                                            <label htmlFor="">Status do livro</label>
                                            <input type="text" name="nome" value={livroInfo.status} required 
                                            disabled={desabilitaBotao} />
                                        </div>
                                    </div>
                                </form>
                            </div>
                            <div className="buttons">
                                <button onClick={() => setDesabilitaBotao(false)}>Editar Livro</button>
                                <button onClick={() => handleRemoveLivro(livroInfo)}>Remover Livro</button>
                            </div>
                            <div className={desabilitaBotao ? 'buttons salvar-alteracoes' : 'buttons'}>
                                <button>Salvar Alterações</button>
                            </div>
                        </div>
                    </div>
                ))}
            </div>

            <div>
                <div className={modalAdicionaLivro ? "modal active adiciona-livro" : "modal" }>
                    <div className="content">
                        <FiX onClick={() => setModalAdicionaLivro(false)}/>
                        {/* <Modal /> */}
                    </div>
                </div>
            </div>
        </>
    )
}

export default Livraria;